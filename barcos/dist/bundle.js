!function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)o.d(r,n,function(t){return e[t]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=o(3),n=o(4),i=o(8);alert("hola");var a=new i.Limite(0,10),u=new r.GeneradorFlota,c=new n.Flota;u.generar(c.barcosArray,3,a);for(var s=0;s<c.barcosArray.length;s++)for(var f=0;f<c.barcosArray[s].position.length;f++)console.log(c.barcosArray[s].position[f].coordenada.toString())},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Coordenada=void 0;var r=o(2),n=function(){function e(e,t){this._x=e,this._y=t}return e.prototype.mover=function(e){e==r.Sentido.abajo?this.bajar():this.avanzar()},Object.defineProperty(e.prototype,"x",{get:function(){return this._x},set:function(e){this._x=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"y",{get:function(){return this._y},set:function(e){this._y=e},enumerable:!1,configurable:!0}),e.prototype.equals=function(e){return this.x==e.x||this.y==e.y},e.prototype.bajar=function(){this.y++},e.prototype.avanzar=function(){this.x++},e.prototype.toString=function(){return this.x.toString()+" - "+this.y.toString()},e}();t.Coordenada=n},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Sentido=void 0,function(e){e[e.abajo=0]="abajo",e[e.derecha=1]="derecha"}(t.Sentido||(t.Sentido={}))},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.GeneradorFlota=void 0;var r=o(1),n=o(2),i=o(5),a=function(){function e(){}return e.prototype.generar=function(e,t,o){do{var a=Math.floor(Math.random()*(o.max-o.min+1)+o.min),u=Math.floor(Math.random()*(o.max-o.min+1)+o.min),c=void 0;c=Math.round(Math.random())?n.Sentido.abajo:n.Sentido.derecha;var s=new r.Coordenada(a,u),f=new i.Barco(1,s,c);0==e.length&&e.push(f);for(var d=!1,l=0;l<e.length;l++)e[l].compruebaSolapamiento(f.position)&&(l=e.length,d=!0);d||e.push(f)}while(e.length!=t)},e}();t.GeneradorFlota=a},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Flota=void 0;var r=function(){function e(){this._barcosArray=[]}return Object.defineProperty(e.prototype,"barcosArray",{get:function(){return this._barcosArray},enumerable:!1,configurable:!0}),e.prototype.addBarco=function(e){this.barcosArray.push(e)},e}();t.Flota=r},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Barco=void 0;var r=o(6),n=o(1),i=o(7),a=function(){function e(e,t,o){this._size=e,this._position=[],this.crearBarco(t,o)}return e.prototype.crearBarco=function(e,t){for(var o=0;o<this.size;o++)this.position.push(new r.Casilla(new n.Coordenada(e.x,e.y),i.Estado.indemne)),e.mover(t)},e.prototype.compruebaSolapamiento=function(e){for(var t=0;t<e.length;t++)for(var o=0;o<this.position.length;o++)if(this.position[o].coordenada.equals(e[t].coordenada))return!0;return!1},Object.defineProperty(e.prototype,"position",{get:function(){return this._position},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"size",{get:function(){return this._size},enumerable:!1,configurable:!0}),e}();t.Barco=a},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Casilla=void 0;var r=function(){function e(e,t){this._coordenada=e,this._estado=t}return Object.defineProperty(e.prototype,"coordenada",{get:function(){return this._coordenada},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"estado",{get:function(){return this._estado},enumerable:!1,configurable:!0}),e}();t.Casilla=r},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Estado=void 0,function(e){e[e.tocado=0]="tocado",e[e.indemne=1]="indemne"}(t.Estado||(t.Estado={}))},function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Limite=void 0;var r=function(){function e(e,t){this._min=e,this._max=t}return Object.defineProperty(e.prototype,"max",{get:function(){return this._max},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"min",{get:function(){return this._min},enumerable:!1,configurable:!0}),e}();t.Limite=r}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,